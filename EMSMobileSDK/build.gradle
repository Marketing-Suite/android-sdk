apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'maven-publish'

group = S3_GROUP_NAME
version = S3_GROUP_VERSION

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "source"
}

android.libraryVariants.all { variant ->
    if (variant.buildType.name == "release") {
        variant.outputs.all { output ->
            publishing.publications.create(variant.name, MavenPublication) {
                artifact sourceJar

                artifact source: output.outputFile, classifier: output.name

                pom.withXml {
                    def dependencies = asNode().appendNode('dependencies')

                    configurations.getByName(variant.name + "CompileClasspath").allDependencies
                            .findAll { it instanceof ExternalDependency }
                            .each {
                                def dependency = dependencies.appendNode('dependency')

                                dependency.appendNode('groupId', it.group)
                                dependency.appendNode('artifactId', it.name)
                                dependency.appendNode('version', it.version)
                            }
                }
            }
        }
    }
}

tasks.all { task ->
    if (task instanceof AbstractPublishToMaven) {
        task.dependsOn assemble
    }
}

publishing {
    repositories {
        maven {
            url S3_URL
            credentials(AwsCredentials) {
                accessKey S3_ACCESS_KEY
                secretKey S3_SECRET_KEY
            }
        }
    }
}

android {
    compileSdkVersion 28
    buildToolsVersion "27.0.3"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 4
        versionName "1.6.2"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    useLibrary 'org.apache.http.legacy'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')


    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:animated-vector-drawable:28.0.0'
    implementation 'com.android.support:support-media-compat:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.google.firebase:firebase-messaging:11.8.0'
    implementation 'com.google.firebase:firebase-core:11.8.0'
    implementation 'com.android.volley:volley:1.1.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:4.2.1'
    testImplementation 'org.mockito:mockito-core:2.1.0'
    implementation 'org.mockito:mockito-core:2.1.0'
    testImplementation 'org.powermock:powermock-core:1.7.0RC2'
    testImplementation 'org.powermock:powermock-module-junit4:1.7.0RC2'
    testImplementation 'org.powermock:powermock-api-mockito2:1.7.0RC2'
    testImplementation "org.powermock:powermock-module-junit4-rule:1.7.0RC2"
    testImplementation "org.powermock:powermock-classloading-xstream:1.7.0RC2"

    api group: 'commons-io', name: 'commons-io', version: '2.6'
}

apply plugin: 'com.google.gms.google-services'